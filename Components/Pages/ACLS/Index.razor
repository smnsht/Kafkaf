@page "/acls"
@using Confluent.Kafka
@using Confluent.Kafka.Admin
@rendermode InteractiveServer

<PageTitle>ACLS: List</PageTitle>

<h3>ACLS: List</h3>

<table class="table">
    <thead>
        <tr>
            <th>Pattern</th>
            <th>Entry</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var acl in aclBindings)
        {
            <tr>
                <td>@acl.Pattern</td>
                <td>@acl.Entry</td>                
            </tr>
        }
    </tbody>
</table>

@code {
    private List<AclBinding> aclBindings = new List<AclBinding>();

    protected override async Task OnInitializedAsync()
    {

        var config = new AdminClientConfig
		{
			BootstrapServers = "localhost:9092"
            // add SecurityProtocol/SASL settings here if needed
		};

        using var admin = new AdminClientBuilder(config).Build();


        // Build a filter that matches ALL ACLs
        var filter = new AclBindingFilter
        {
            PatternFilter = new ResourcePatternFilter
            {
                Type = ResourceType.Any,
                Name = null, // null == any name
                ResourcePatternType = ResourcePatternType.Any
            },
            EntryFilter = new AccessControlEntryFilter
            {
                Principal = null,   // any principal
                Host = null,        // any host
                Operation = AclOperation.Any,
                PermissionType = AclPermissionType.Any
            }
        };

        var result = await admin.DescribeAclsAsync(filter);
        this.aclBindings = result.AclBindings;

        await base.OnInitializedAsync();
    }
}
